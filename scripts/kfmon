#!/bin/sh
### BEGIN INIT INFO
# Provides:          kfmon
# Required-Start:    $all
# Required-Stop:
# Default-Start:     S
# Default-Stop:
# Short-Description: KFMon init script
### END INIT INFO

# Launch KFMon if it isn't already running...
KFMON_BIN="/usr/local/kfmon/bin/kfmon"
KFMON_PID_FILE="/var/run/kfmon.pid"
KFMON_LOG="/usr/local/kfmon/kfmon.log"

do_start() {
	echo "[START] [$(date +'%Y-%m-%d @ %H:%M:%S')] [INFO] [PID: $$] Starting KFMon . . ." >> "${KFMON_LOG}"
	if [ -x "${KFMON_BIN}" ] ; then
		# NOTE: On v4, we used to guarantee providing PRODUCT & PLATFORM in the env.
		#       The base system now provides us with a much neater way of having the whole Nickel env, so, let's use it ;).
		. "/usr/libexec/platform/nickel-env.sh"
		# Except for LD_LIBRARY_PATH, nobody wants that ;)
		unset LD_LIBRARY_PATH

		start-stop-daemon -S -x "${KFMON_BIN}" -p "${KFMON_PID_FILE}"
		# NOTE: The PID shown here is not terribly helpful, since the first thing KFMon will do will be to fork twice to daemonize...
		echo "[START] [$(date +'%Y-%m-%d @ %H:%M:%S')] [INFO] [PID: $$] Launched KFMon! (Initial PID: $!)" >> "${KFMON_LOG}"
	else
		echo "[START] [$(date +'%Y-%m-%d @ %H:%M:%S')] [ERR!] [PID: $$] KFMon binary '${KFMON_BIN}' cannot be executed!" >> "${KFMON_LOG}"
	fi
}

do_stop() {
	if start-stop-daemon -K -x "${KFMON_BIN}" -p "${KFMON_PID_FILE}" ; then
		# KFMon doesn't have a SIGTERM handler, and busybox's ssd doesn't support --remove-pidfile,
		# so, make sure we remove the pidfile ourselves on success.
		rm -f "${KFMON_PID_FILE}"
	fi
}

case "$1" in
	start)
		do_start
	;;
	restart|reload|force-reload)
		do_stop
		do_start
	;;
	stop)
		do_stop
	;;
	*)
		echo "Usage: $0 start|stop|restart" >&2
		exit 3
	;;
esac
