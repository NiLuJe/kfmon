#!/bin/sh
### BEGIN INIT INFO
# Provides:          kfmon
# Required-Start:    $all
# Required-Stop:
# Default-Start:     S
# Default-Stop:
# Short-Description: Run /etc/rc.local if it exist
### END INIT INFO

# Check if arg is an int
is_integer()
{
	# Cheap trick ;)
	[ "${1}" -eq "${1}" ] 2>/dev/null
	return $?
}

# Launch KFMon if it isn't already running...
KFMON_PID_FILE="/var/run/kfmon.pid"
KFMON_PID=""
SHOULD_START_KFMON="maybe"
KFMON_LOG="/usr/local/kfmon/kfmon.log"


do_start() {
    echo "[START] [$(date +'%Y-%m-%d @ %H:%M:%S')] [INFO] [PID: $$] Starting KFMon . . ." >> "${KFMON_LOG}"
	KFMON_BIN="/usr/local/kfmon/bin/kfmon"
	if [ -x "${KFMON_BIN}" ] ; then
		LIBC_FATAL_STDERR_=1 "${KFMON_BIN}" &
		# NOTE: The PID shown here is not terribly helpful, since the first thing KFMon will do will be to fork twice to daemonize...
		echo "[START] [$(date +'%Y-%m-%d @ %H:%M:%S')] [INFO] [PID: $$] Launched KFMon! (Initial PID: $!)" >> "${KFMON_LOG}"
	else
		echo "[START] [$(date +'%Y-%m-%d @ %H:%M:%S')] [ERR!] [PID: $$] KFMon binary '${KFMON_BIN}' cannot be executed!" >> "${KFMON_LOG}"
	fi
   
}

do_stop() {
    pkill kfmon
}

case "$1" in
    start)
        do_start
        ;;
    restart|reload|force-reload)
        do_stop
        do_start
        ;;
    stop)
        do_stop
        ;;
    *)
        echo "Usage: $0 start|stop|restart" >&2
        exit 3
        ;;
esac